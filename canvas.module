<?php
/**
 * @file
 * canvas module file
 */

/**
 * Implements hook_menu().
 */
function canvas_menu() {
  $items = array();
  $items['canvas/overview'] = array(
    'title' => t('Canvas Apps'),
    'page callback' => 'canvas_app_overview',
    'access arguments' => array('access canvas pages'),
  );
  $items['canvas/%/like'] = array(
    'page callback' => 'canvas_like_page',
    'access callback' => 'canvas_in_canvas',
  );
  $items['canvas/%/oauth'] = array(
    'page callback' => 'canvas_oauth_page',
    'access callback' => 'canvas_in_canvas',
  );
  return $items;
}

function canvas_app_overview() {
  $apps = canvas_get_apps();
  $content = array();
  $content['table'] = array(
    '#theme' => 'table',
    '#header' => array(t('Title'), t('Info'), array(
      'colspan' => 4,
      'data' => t('Links'),
    )),
    '#rows' => array(),
  );
  foreach ($apps as $key => $app) {
    $row = array();
    $row['name'] = array_key_exists('title', $app)?$app['title']:$key;
    if (array_key_exists('info', $app)) {
      $row['info'] = call_user_func($app['info']);
    }
    else {
      $row['info'] = t('No info');
    }
    $popup = array('attributes' => array('class' => array('canvas-popup')));
    $row['main'] = l(t('Main'), $key, $popup);
    $row['like'] = l(t('Like'), 'canvas/' . $key . '/like', $popup);
    $row['oauth'] = l(t('Request'), 'canvas/' . $key . '/oauth', $popup);
    if (array_key_exists('page', $app) && array_key_exists('appid', $app)) {
      $row['link'] = l(t('Link'), 'http://www.facebook.com/' . $app['page'],
        array(
          'query' => array( 'sk' => 'app_' . $app['appid'] ),
          'attributes' => array('class' => array('canvas-page')),
        )
      );
    }
    else {
      $content['link'] = t('No Page');
    }
    $content['table']['#rows'][] = $row;
  }
  $js = array('jQuery(document).ready(function() {
    //jQuery("a.canvas-popup").colorbox({ innerWidth:"520px" });
    jQuery("a.canvas-page, a.canvas-popup").click(function(){
      window.open(jQuery(this).attr("href"));
      return false;
    });
  });' => array('type' => 'inline'));
  $content['table']['#attached']['js'] = $js;
  return $content;
}

/**
 * Implements hook_theme().
 */
function canvas_theme() {
  return array(
    'canvas_like' => array(
      'template' => 'canvas_like',
      'variables' => array('like_button' => NULL),
    ),
    'canvas_oauth' => array(
      'template' => 'canvas_oauth',
      'variables' => array('oauth_link' => NULL),
    ),
  );
}

/**
 * Implements hook_permission().
 */
function canvas_permission() {
  return array(
    'access canvas pages' => array(
      'title' => t('Access canvas pages'),
      'description' => t('Access canvas pages directly from administration.'),
    ),
  );
}

/**
 * Redirect to oauth dialog.
 */
function canvas_oauth_page() {
  $facebook = canvas_api();
  $oauth_link = $facebook->getLoginUrl(array(
    'next' => url('http://www.facebook.com/' . $facebook->page, array('query' => array(
      'sk' => 'app_' . $facebook->getAppId(),
    ))),
    'req_perms' => array_key_exists('req_perms', $_GET)?$_GET['req_perms']:'',
  ));
  return theme('canvas_oauth', array('oauth_link' => $oauth_link));
}

/**
 * Page Callback for Like Requests.
 */
function canvas_like_page() {
  $facebook = canvas_api();
  $button = array(
    '#theme' => 'html_tag',
    '#tag' => 'fb:like',
    '#value' => '&nbsp;',
    '#attributes' => array(
      'href' => 'http://www.facebook.com/' . $facebook->page,
      'show_faces' => 'false',
      'layout' => 'button_count',
      'send' => 'false',
    ),
  );
  drupal_add_js('jQuery(document).ready(function () {
    FB.Event.subscribe("edge.create", function(response) {
      top.location.href = "http://www.facebook.com/' . $facebook->page . '?sk=app_' . $facebook->getAppId() . '";
    });
  });', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
  return theme('canvas_like', array('like_button' => drupal_render($button)));
}

/**
 * Return all implemented Facebook Apps.
 */
function canvas_get_apps() {
  $apps = &drupal_static(__FUNCTION__);
  if (!isset($apps)) {
    $apps = module_invoke_all('canvas_apps');
    drupal_alter('canvas_apps', $apps);
  }
  return $apps;
}

/**
 * Implements hook_init().
 */
function canvas_init() {
  $item = menu_get_item($_GET['q']);
  if ($item['access_callback'] == 'canvas_likes') {
    if (!canvas_likes()) {
      drupal_goto('canvas/' . arg(0) . '/like');
    }
  }
  if ($item['access_callback'] == 'canvas_authorized') {
    $arg = unserialize($item['access_arguments']);
    if (!call_user_func_array('canvas_authorized', $arg)) {
      drupal_goto('canvas/' . arg(0) . '/oauth', array( 'query' => array(
        'req_perms' => $arg[0],
      )));
    }
  }
  $facebook = canvas_api();
  if ($facebook) {
    $languages = language_list();
    $sr = $facebook->getSignedRequest();
    if (!empty($sr)) {
      list($fb_lang, $fb_special) = explode('_', $sr['user']['locale']);
      global $language;
      if (array_key_exists($fb_lang, $languages)) {
        $language = $languages[$fb_lang];
      }
      if (!array_key_exists('page', $sr)) {
        $protocol = 'http://';
        if ($_SERVER['SERVER_PORT'] == 443) {
          $protocol = 'https://';
        }
        drupal_add_js('jQuery(document).ready(function () {
          top.location.href = "' . $protocol . 'www.facebook.com/' . $facebook->page . '?sk=app_' . $facebook->getAppId() . '";
        });', array('type' => 'inline', 'weight' => 0));
      }
    }
    drupal_add_js($facebook->getJavascriptUrl(), array('type' => 'external'));
    drupal_add_js(drupal_get_path('module', 'canvas') . '/canvas.js');
    drupal_add_js(array('canvas' => array('appid' => $facebook->getAppId())), 'setting');
  }
}

/**
 * Initializes a facebook api object from the apps-array.
 */
function canvas_api($app = FALSE) {
  if (!$app) {
    $app = arg(0);
  }
  if ($app == 'canvas') {
    $app = arg(1);
  }
  $api = &drupal_static(__FUNCTION__);
  if (isset($api)) {
    return $api;
  }
  $apps = canvas_get_apps();
  if (!array_key_exists($app, $apps)) {
    return FALSE;
  }
  require_once 'facebook_canvas.php';
  try {
    $api = new FacebookCanvas($app, $apps[$app]);
    return $api;
  }
  catch (Exception $exc) {
    dpm($exc);
  }
  return FALSE;
}

/**
 * Implements hook_form_alter().
 * Pass signed request to form calls.
 */
function canvas_form_alter(&$form, &$form_state) {
  if (!array_key_exists('signed_request', $form) && array_key_exists('signed_request', $_REQUEST)) {
    $form['signed_request'] = array(
      '#type' => 'hidden',
      '#value' => $_REQUEST['signed_request'],
    );
  }
}

/**
 * Implements hook_url_outbound_alter().
 * Pass signed requests to urls.
 */
function canvas_url_outbound_alter(&$path, &$options, $original_path) {
  if (array_key_exists('signed_request', $_REQUEST)) {
    $options['query']['signed_request'] = $_REQUEST['signed_request'];
  }
}

/**
 * Check if page is displayed inside a canvas app.
 */
function canvas_in_canvas() {
  // skip for administrators
  if (user_access('access canvas pages')) {
    return TRUE;
  }
  $api = canvas_api();
  if (empty($api)) {
    return FALSE;
  }
  $r = $api->getSignedRequest();
  if (empty($r)) {
    return FALSE;
  }
  if (!array_key_exists('page', $r)) {
    return FALSE;
  }
  return TRUE;
}
/**
 * Check if user authorized page.
 */
function canvas_authorized() {
  // skip for administrators
  if (user_access('access canvas pages')) { return TRUE; }
  $facebook = canvas_api();
  try {
    if ($facebook && $facebook->api('/me')) {
      return TRUE;
    }
  } catch (FacebookApiException $e) {
  }
  return FALSE;
}

/**
 * Check if the user likes the page.
 */
function canvas_likes() {
  // skip for administrators
  if (user_access('access canvas pages')) {
    return TRUE;
  }
  // skip if not displayed in canva // skip if not displayed in canvass
  if (!canvas_in_canvas()) { return FALSE; }
  if($facebook = canvas_api()) {
    $data = $facebook->getSignedRequest();
    return $data['page']['liked'];
  }
  return TRUE;
}

/**
 * Implements hook_custom_theme().
 */
function canvas_custom_theme() {
  $app = arg(0);
  if ($app == 'canvas') {
    $app = arg(1);
  }
  $apps = canvas_get_apps();

  if (array_key_exists($app, $apps) && array_key_exists('theme', $apps[$app])) {
    return $apps[$app]['theme'];
  }
}

/**
 * Implements hook_rdf_namespaces().
 */
function canvas_rdf_namespaces() {
  return array(
    'fb'  => 'http://www.facebook.com/2008/fbml',
  );
}
